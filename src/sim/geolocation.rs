use serde::{Serialize, Deserialize};
use uuid::Uuid;

/// Represents a geolocation row in the database.
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct GeoLocation {
    /// UUID primary key (autogenerated by Supabase)
    pub id: Option<Uuid>,

    /// Linked address_id (FK)
    pub address_id: Option<Uuid>,

    /// Latitude (decimal degrees)
    pub lat: f64,

    /// Longitude (decimal degrees)
    pub lon: f64,

    /// Elevation in meters (optional)
    pub elevation_m: Option<f64>,

    /// Created timestamp (Supabase default)
    pub created_at: Option<chrono::DateTime<chrono::Utc>>,
}

impl GeoLocation {
    /// Helper constructor for simple creation
    pub fn new(lat: f64, lon: f64, address_id: Option<Uuid>) -> Self {
        Self {
            id: None,
            address_id,
            lat,
            lon,
            elevation_m: Some(0.0),
            created_at: None,
        }
    }
}
